{"version":3,"sources":["../dom.ts","../helpers.ts","../link.ts","../loaders/percent/index.ts","../index.ts","bjax.ts"],"names":[],"mappings":"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","file":"bjax.js","sourceRoot":"../src/entries","sourcesContent":["export type DOMTarget = string | Element | Element[] | NodeListOf<Element> | undefined | null\n\nexport function find(target: DOMTarget): Element | undefined {\n    if (target instanceof Element) {\n        return target\n    }\n    if (target instanceof Array) {\n        return target[0] || undefined\n    }\n    if (target instanceof NodeList) {\n        return target[0] || undefined\n    }\n    if (typeof target === 'string') {\n        try {\n            return document.querySelector(target) || undefined\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    return undefined\n}\n\nexport function findAll(target: DOMTarget): Element[] {\n    if (target instanceof Element) {\n        return [target]\n    }\n    if (target instanceof Array) {\n        return target\n    }\n    if (target instanceof NodeList) {\n        return Array.prototype.slice.call(target)\n    }\n    if (typeof target === 'string') {\n        try {\n            return Array.prototype.slice.call(document.querySelectorAll(target))\n        } catch (error) {\n            console.error(error)\n        }\n    }\n    return []\n}\n\nexport function matches(target: DOMTarget, selector: string): boolean {\n    const matchesFunc =\n        Element.prototype.matches ||\n        (Element.prototype as any).msMatchesSelector ||\n        Element.prototype.webkitMatchesSelector\n    return findAll(target).some((element) => matchesFunc.call(element, selector))\n}\n\nexport function parents(target: DOMTarget, selector?: string): Element[] {\n    let parentList: Element[] = []\n    findAll(target).forEach((element) => {\n        const parent = element.parentNode\n        if (parent !== document && parent instanceof Element) {\n            parentList.push(parent)\n            parentList = parentList.concat(parents(parent))\n        }\n    })\n    return parentList.filter((element) => selector === undefined || matches(element, selector))\n}\n\nexport function liveBind<K extends keyof HTMLElementEventMap>(\n    target: DOMTarget,\n    eventName: K,\n    callback: (event: HTMLElementEventMap[K], element: HTMLElement) => void | boolean\n): void {\n    window.addEventListener(eventName, event => {\n        const eventTarget = event.target\n        if (eventTarget instanceof HTMLElement) {\n            const el = [eventTarget, ...parents(eventTarget)].filter((v) =>\n                typeof target === 'string' ? matches(v, target) : target === v\n            )[0]\n            if (el instanceof HTMLElement) {\n                callback(event as HTMLElementEventMap[K], el)\n            }\n        }\n    })\n}\n\nexport function create(html: string): Node | undefined {\n    const div = document.createElement('div')\n    div.innerHTML = html.trim()\n    const firstChild = div.firstChild\n    if (firstChild) {\n        div.removeChild(firstChild)\n        return firstChild\n    }\n    return undefined\n}\n\nexport function findOrCreate(selector: DOMTarget, html: string): Node | undefined {\n    const element = find(selector)\n    return element ? element : create(html)\n}\n","export function request(params: { url: string }, success: (content: string) => void, error: (error: RequestError) => void): void {\n    const request = new XMLHttpRequest()\n    request.open('GET', params.url, true)\n    try {\n        request.send(null)\n    } catch (error) {\n        console.log(error)\n    }\n    request.onreadystatechange = function() { \n        if (request.readyState == 4) {\n            if (request.status == 200) {\n                success(request.responseText)\n            } else {\n                error(new RequestError(request.statusText, request.status))\n            }\n        }\n    }\n}\n\nexport class RequestError extends Error {\n    constructor(error: string, public status: number) {\n        super(error)\n    }\n}","import { DOMTarget, find, liveBind } from './dom'\nimport { Loader } from './loaders'\nimport { request, RequestError } from './helpers'\n\nexport interface LoadLinkOptions {\n    /**\n     * DOM selector where should be inserted downloaded page HTML (default is `body`).\n     */\n    target?: DOMTarget\n    /**\n     * DOM selected which indicates which part from downloaded page should be extracted (default is `body`).\n     */\n    source?: string\n    /**\n     * Overwrites both `target` and `source`.\n     */\n    selector?: string\n    /**\n     * Indicates if the url should be updated using `url` parameter using `pushState` (default is `true`).\n     */\n    shouldUpdateUrl?: boolean\n    /**\n     * Custom loader instance (default is empty loader - `{}`).\n     */\n    loader?: Loader<any>\n    /**\n     * Callback which is called if the function finished the work without an error.\n     */\n    successCallback?: (params: { target: HTMLElement }) => void\n    /**\n     * Callback which is called if the function had an error and failed to finish.\n     */\n    errorCallback?: (params: { target: HTMLElement, error: RequestError }) => void\n}\n\nconst defaultLoadLinkOptions: Required<LoadLinkOptions> = {\n    target: 'body',\n    source: 'body',\n    successCallback: () => {},\n    errorCallback: () => {},\n    shouldUpdateUrl: true,\n    loader: {},\n    selector: ''\n}\n\nlet stateBinded = false\n\nexport function loadLink(url: string, options?: LoadLinkOptions): void {\n    const {\n        target,\n        source,\n        selector,\n        successCallback,\n        errorCallback,\n        shouldUpdateUrl,\n        loader\n    } = {...defaultLoadLinkOptions, ...options}\n    const targetElement = find(selector ? selector : target)\n    if (targetElement instanceof HTMLElement) {\n        if (!stateBinded) {\n            bindPopState()\n            stateBinded = true\n        }\n\n        const loaderState = loader.start ? loader.start({\n            target: targetElement\n        }) : undefined\n        request({ url }, content => {\n            const html = document.createElement('html')\n            html.innerHTML = content\n            const sourceElement = html.querySelector(selector ? selector : source)\n\n            if (sourceElement instanceof HTMLElement) {\n                targetElement.innerHTML = sourceElement.innerHTML\n            }\n\n            const titleElement = html.querySelector('title')\n            document.title = titleElement ? titleElement.innerHTML : document.title\n\n            if (shouldUpdateUrl) {\n                try {\n                    history.pushState({\n                        bjaxLink: {\n                            url,\n                            loader\n                        },\n                    }, document.title, url)\n                } catch (error) {\n                    console.warn(`Failed to update URL: ${error}`)\n                }\n            }\n            if (loader.finish) {\n                loader.finish({\n                    target: targetElement\n                }, loaderState)\n            }\n            successCallback({\n                target: targetElement\n            })\n        }, (error) => {\n            if (loader.error) {\n                loader.error({\n                    error,\n                    target: targetElement,\n                }, loaderState)\n            }\n            errorCallback({\n                error,\n                target: targetElement\n            })\n        })\n    } else {\n        console.error('loadLink target not found')\n    }\n}\n\nfunction bindPopState(): void {\n    window.addEventListener('popstate', event => {\n        const data = event.state\n        console.log(data)\n        if (data.bjaxLink) {\n            loadLink(data.bjaxLink.url, {\n                shouldUpdateUrl: false,\n                loader: data.bjaxLink.loader\n            })\n        }\n    }, false)\n    history.replaceState({\n        bjaxLink: {\n            url: location.href,\n            loader: defaultLoadLinkOptions.loader\n        }\n    }, '')\n}\n\nexport interface BindLinksOptions extends LoadLinkOptions {\n    /**\n     * Target page URL, default is `undefined` and `urlAttribute` parameter is used.\n     */\n    url?: string\n    /**\n     * `url` parameter value, which is taken from clicked element (default is `href`).\n     */\n    urlAttribute?: string\n    /**\n     * `target` parameter value, which is taken from clicked element (default is `data-target`).\n     */\n    targetAttribute?: string\n    /**\n     * `source` parameter value, which is taken from clicked element (default is `data-source`).\n     */\n    sourceAttribute?: string\n    /**\n     * `selector` parameter value, which is taken from clicked element (default is `data-selector`).\n     */\n    selectorAttribute?: string\n}\n\nconst defaultBindLinksOptions: Required<BindLinksOptions> = {\n    ...defaultLoadLinkOptions,\n    url: '',\n    urlAttribute: 'href',\n    target: '',\n    targetAttribute: 'data-target',\n    source: '',\n    sourceAttribute: 'data-source',\n    selector: '',\n    selectorAttribute: 'data-selector'\n}\n\nexport function bindLinks(selector: DOMTarget, options?: BindLinksOptions): void {\n    const {\n        url,\n        urlAttribute,\n        source,\n        sourceAttribute,\n        target,\n        targetAttribute,\n        selector: selector2,\n        selectorAttribute,\n        ...kwargs\n    } = {...defaultBindLinksOptions, ...options}\n    liveBind(selector, 'click', (event, element) => {\n        const finalUrl = url || (urlAttribute === 'href' && element instanceof HTMLAnchorElement ? element.href : element.getAttribute(urlAttribute))\n        const finalSource = source || element.getAttribute(sourceAttribute)\n        const finalTarget = target || element.getAttribute(targetAttribute)\n        const finalSelector = selector2 || element.getAttribute(selectorAttribute)\n        if (finalUrl) {\n            loadLink(finalUrl, {\n                ...(finalSource ? {source: finalSource} : undefined),\n                ...(finalTarget ? {target: finalTarget} : undefined),\n                ...(finalSelector ? {selector: finalSelector} : undefined),\n                ...kwargs\n            })\n            event.preventDefault()\n        } else {\n            console.error('Clicked element does not have valid URL')\n        }\n    })\n}\n","import { Loader, LoaderParams, LoaderErrorParams } from '../'\nimport { findOrCreate } from '../../dom'\n\ninterface State {\n    mainEl: HTMLElement\n    barEl: HTMLElement\n    errorEl: HTMLElement\n    interval: number\n}\n\nfunction createPercentAnimation(callback: (progress: number) => void, finish: () => void, duration: number): number {\n    const start = Date.now()\n    const interval = setInterval(() => {\n        const now = Date.now()\n        if (now - start >= duration) {\n            callback(100)\n            clearInterval(interval)\n        } else {\n            callback(Math.min(Math.round((now - start) / duration * 100), 100))\n        }\n    }, Math.max(30, Math.round(duration / 100)))\n    return interval\n}\n\nexport class PercentLoader implements Loader<State> {\n    start({ target }: LoaderParams): State {\n        const mainEl = findOrCreate(target.querySelector('.bjax-percentloader-container'), `\n            <div class=\"bjax-percentloader-container\"></div>\n        `) as HTMLElement\n        const barEl = findOrCreate(target.querySelector('.bjax-percentloader-bar'), `\n            <div class=\"bjax-percentloader-bar\"></div>\n        `) as HTMLElement\n        const errorEl = findOrCreate(target.querySelector('.bjax-percentloader-error'), `\n            <div class=\"bjax-percentloader-error\"></div>\n        `) as HTMLElement\n        mainEl.appendChild(barEl)\n        mainEl.appendChild(errorEl)\n\n        target.style.position = 'relative'\n        target.appendChild(mainEl)\n\n        return {\n            mainEl,\n            barEl,\n            errorEl,\n            interval: createPercentAnimation(progress => {\n                barEl.style.width = `${progress}%`\n            }, () => {\n\n            },500)\n        }\n    }\n\n    finish({ target }: LoaderParams, { interval }: State) {\n        clearInterval(interval)\n        target.style.position = ''\n    }\n\n    error({ target, error }: LoaderErrorParams, { interval, barEl, errorEl }: State) {\n        barEl.className = 'bjax-percentloader-bar bjax-percentloader-bar-error'\n        errorEl.innerHTML = error.message\n    }\n}\n","export { bindLinks, BindLinksOptions, loadLink, LoadLinkOptions } from './link'\nexport { liveBind, find, findAll } from './dom'\nexport { Loader, LoaderErrorParams, LoaderParams } from './loaders'\nexport { PercentLoader } from './loaders/percent'","import * as Bjax from '../'\n\ndeclare global {\n    interface Window {\n        Bjax: typeof Bjax\n    }\n}\n\nwindow.Bjax = Bjax"]}